function main(){var canvas=document.createElement("canvas"),content=document.getElementById("content");canvas.style.position="fixed",canvas.style.zIndex=-1,canvas.style.top=0,canvas.style.left=0,content.appendChild(canvas);var gl=canvas.getContext("webgl");if(!gl)return void console.log("WebGL not supported");function resizeCanvas(){canvas.width=window.innerWidth,canvas.height=window.innerHeight,gl.viewport(0,0,canvas.width,canvas.height)}resizeCanvas(),window.addEventListener("resize",resizeCanvas);var vertices=new Float32Array([-1,-1,1,-1,-1,1,1,1]);function createShader(type,source){var shader=gl.createShader(type);return gl.shaderSource(shader,source),gl.compileShader(shader),gl.getShaderParameter(shader,gl.COMPILE_STATUS)?shader:(console.error("Shader compilation failed:",gl.getShaderInfoLog(shader)),gl.deleteShader(shader),null)}var vertexShader=createShader(gl.VERTEX_SHADER,"\n            attribute vec2 position;\n            varying vec2 v_texCoord;\n            void main() {\n                v_texCoord = position * 0.5 + 0.5;\n                gl_Position = vec4(position, 0.0, 1.0);\n            }\n        "),fragmentShader=createShader(gl.FRAGMENT_SHADER,"\nprecision mediump float;\n\nuniform float time;\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform sampler2D prevFrame;\n\nvarying vec2 v_texCoord;\n\nvoid main() {\n    vec2 uv = v_texCoord;\n    float t = time;\n\n    // Read previous frame and fade it slightly\n    vec4 prev = texture2D(prevFrame, uv);\n    vec3 faded = prev.rgb * 0.096;\n\n    // Flame rising from bottom\n    float y = uv.y - t * 0.2;\n    float baseFlame = exp(-10.0 * abs(uv.x - 0.5)) * pow(1.0 - y, 3.0);\n    baseFlame *= smoothstep(0.0, 0.3, uv.y); // only near bottom\n\n    // Mouse-injected flame\n    float dist = distance(uv, mouse);\n    float mouseFlame = exp(-dist * 40.0);\n\n    // Total flame intensity\n    float f = baseFlame + mouseFlame;\n\n    // Fire color gradient\n    vec3 fire = vec3(0.0);\n    fire.r = smoothstep(0.0, 1.0, f * 2.0);\n    fire.g = smoothstep(0.2, 0.8, f);\n    fire.b = smoothstep(0.5, 0.8, f * 0.5);\n\n    // Combine with faded previous frame\n    vec3 finalColor = clamp(faded + fire, 0.0, 1.0);\n\n    gl_FragColor = vec4(finalColor, 1.0);\n}\n\n\n\n        "),program=gl.createProgram();gl.attachShader(program,vertexShader),gl.attachShader(program,fragmentShader),gl.linkProgram(program),gl.useProgram(program);var timeLocation=gl.getUniformLocation(program,"time"),resolutionLocation=gl.getUniformLocation(program,"resolution"),mouseLocation=gl.getUniformLocation(program,"mouse"),lastFrameTime=0,buffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,buffer),gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);var positionLocation=gl.getAttribLocation(program,"position");gl.enableVertexAttribArray(positionLocation),gl.vertexAttribPointer(positionLocation,2,gl.FLOAT,!1,0,0);var mouse=[.5,0];function createFramebufferTexture(){const tex=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,tex),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,canvas.width,canvas.height,0,gl.RGBA,gl.UNSIGNED_BYTE,null),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);const fb=gl.createFramebuffer();return gl.bindFramebuffer(gl.FRAMEBUFFER,fb),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,tex,0),{texture:tex,framebuffer:fb}}canvas.addEventListener("mousemove",(function(e){mouse[0]=e.clientX/canvas.width,mouse[1]=1-e.clientY/canvas.height}));let bufferA=createFramebufferTexture(),bufferB=createFramebufferTexture();var prevFrameLocation=gl.getUniformLocation(program,"prevFrame");!function animate(now){if(now-lastFrameTime>=16.666666666666668){lastFrameTime=now,gl.useProgram(program),gl.uniform1f(timeLocation,.001*now),gl.uniform2f(resolutionLocation,canvas.width,canvas.height),gl.uniform2f(mouseLocation,mouse[0],mouse[1]),gl.activeTexture(gl.TEXTURE0),gl.bindTexture(gl.TEXTURE_2D,bufferA.texture),gl.uniform1i(prevFrameLocation,0),gl.bindFramebuffer(gl.FRAMEBUFFER,bufferB.framebuffer),gl.viewport(0,0,canvas.width,canvas.height),gl.clearColor(0,0,0,1),gl.clear(gl.COLOR_BUFFER_BIT),gl.drawArrays(gl.TRIANGLE_STRIP,0,4),gl.bindFramebuffer(gl.FRAMEBUFFER,null),gl.viewport(0,0,canvas.width,canvas.height),gl.bindTexture(gl.TEXTURE_2D,bufferB.texture),gl.drawArrays(gl.TRIANGLE_STRIP,0,4);let temp=bufferA;bufferA=bufferB,bufferB=temp}requestAnimationFrame(animate)}()}main();