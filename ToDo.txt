 To do list

ExternalLED_FastLEDCount - create a run time variant of this, with corresponding FastLED stuff to be able to toggle at run time counts e.g. between full ExternalLED_Count and 1
i.e. battery saving mode to turn on/off led's e.g. if battery below certain percentage, or user preference

NOTE that button holding measurements and LED measurements might cross the micros() boundary and not be accurate - so update with more detailed timing measurements

Have an AutoFade bool on LEDconfig? Though this means 1 led might get faded twice, so nope.

Core 0 runs wifi, bluetooth etc.
By default, main loop is on core 1.
LED loop running on core 1 - slowing down core 1 accordingly.

TODO:
Can we find a happy balance between speed of LED processing and main loop latency?
Note that too slow on the LED loop and things like fast fades along large LED arrays
take some time!

IDLE LED Effect
If controls not touched for XX seconds, idle mode till something pressed

Screen on during idle (turn off while playing when wont see it - UNLESS BATTERY WARNING)

Save settings to flash
Brown out (interrupt call) -> save settings? https://forum.arduino.cc/t/power-loss-detection-at-esp32-saving-variables-to-flash-memory/1188993
FRAM
https://forums.adafruit.com/viewtopic.php?t=192021
https://www.aliexpress.com/w/wholesale-I2C-Non%2525252dVolatile-FRAM.html?spm=a2g0o.home.search.0
https://randomnerdtutorials.com/esp32-save-data-permanently-preferences/
