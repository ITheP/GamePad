IMPORTANT

--------------------------------------------------

Arduino IDE:
ESP32S3 Dev Module
Tools -> USB CDC On Boot -> Enabled

VSCode IDE:
platformio.ini
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 921600
monitor_rts = 0
monitor_dtr = 0
build_flags = -DARDUINO_USB_CDC_ON_BOOT=1

--------------------------------------------------

RREFont - make sure the CONVERT_PL_CHARS in RREFont.h = 0 (else character mappings screw up our icon references)

--------------------------------------------------

Recommended max number of physical LED's

Using a typical 5V USB without high-current capabilities, it should be safe to power

- 10-15 NeoPixels at moderate usage (around 20-30mA per LED)
- 5-8 NeoPixels at full brightness (60mA per LED)

...accounting for an extra 100 or so mA for controller, and remembering standard USB 2.0 ports are typically rated for 500mA, and USB 3.0 ports 900 mA

USB-C (depending on source) can supply 500mA to 3A at 5V (ignoring negotiated higher power levels)
- 50-75 at moderate usage
- 25-30 at full brightness

If using a 18650 battery, we can probably use...

- 50-75 at moderate usage
- 25-30 at full brightness

However if a boost converter is used it might get hot, and battery would probably be drained in 1-2 hours.

--------------------------------------------------

Power observations

Personal experience - test rig with 64 rgb pixels had zero problem off a bog standard USB socket

Normal ticking over of device no LED's was around 0.6 watts

Having 8x8 LED test board plugged in ate an extra ~0.04 watts/~20mA of power without being used

6 LED's coloured outputs full brightness device total hits about 1.15 watts

OLED screen measured around ~0.02 watts power/~10mA (device specs specify max ~0.08w)

--------------------------------------------------

Main loop running on core 0, core 1 is running FastLED().Show, which gets called @ ~60fps

--------------------------------------------------

Bluetooth latencies...

Bluetooth 4.0	100-200ms
Bluetooth 4.1	100-200ms
Bluetooth 4.2	50-100ms
Bluetooth 5.0	30-50ms
Bluetooth 5.1	30-50ms
Bluetooth 5.2	20-30ms
Bluetooth 5.3	20-30ms
Bluetooth 5.4	10-20ms

Mad about controller latencies? Check out places like https://gamepadla.com/

Button press to final controller activation in host OS latency for this device.......... no idea :)

--------------------------------------------------

Processing latencies
// With LEDs enabled processed every loop, tested at around 720-760 FPS i.e. < 1.3ms. Varies slightly as buttons get pressed so more code runs.
// Still enough for our usage, baring in mind that is far less than the typical de-bounce timescale for a button too

// With no LEDs enabled, tested at around 14500-15500 FPS i.e. < 0.07ms.

--------------------------------------------------

Extra info

https://github.com/lemmingDev/ESP32-BLE-Gamepad?tab=readme-ov-file
Ton of controller info https://santroller.tangentmc.net/